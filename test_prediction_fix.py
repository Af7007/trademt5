"""
Teste R√°pido para Verificar Corre√ß√£o do C√°lculo de Opera√ß√µes
"""

from prediction import PredictionEngine, PredictionRequest
from datetime import datetime

def test_operations_calculation():
    """Testa o c√°lculo correto de opera√ß√µes necess√°rias"""
    print("=" * 70)
    print("TESTE: Corre√ß√£o do C√°lculo de Opera√ß√µes")
    print("=" * 70)
    
    engine = PredictionEngine()
    
    # Par√¢metros do teste
    request = PredictionRequest(
        symbol="XAUUSDc",
        target_profit=30.0,
        balance=1000.0,
        timeframe="M1"
    )
    
    print(f"\nüìä PAR√ÇMETROS DE TESTE:")
    print(f"   ‚Ä¢ S√≠mbolo: {request.symbol}")
    print(f"   ‚Ä¢ Lucro Alvo: ${request.target_profit}")
    print(f"   ‚Ä¢ Banca: ${request.balance}")
    print(f"   ‚Ä¢ Timeframe: {request.timeframe}")
    
    try:
        print(f"\nüîÑ Gerando predi√ß√£o...")
        result = engine.predict(request)
        
        print(f"\n‚úÖ RESULTADOS:")
        print(f"   ‚Ä¢ Opera√ß√µes Estimadas: {result.estimated_operations}")
        print(f"   ‚Ä¢ Tempo Estimado: {result.estimated_duration_description}")
        print(f"   ‚Ä¢ Probabilidade: {result.success_probability * 100:.1f}%")
        
        if result.recommended_trades:
            trade = result.recommended_trades[0]
            print(f"\nüéØ RECOMENDA√á√ÉO PRINCIPAL:")
            print(f"   ‚Ä¢ Dire√ß√£o: {trade.direction}")
            print(f"   ‚Ä¢ Confian√ßa: {trade.confidence * 100:.1f}%")
            print(f"   ‚Ä¢ Lote: {trade.lot_size}")
            print(f"   ‚Ä¢ Lucro Esperado: ${trade.expected_profit:.2f}")
            print(f"   ‚Ä¢ Perda Esperada: ${trade.expected_loss:.2f}")
            print(f"   ‚Ä¢ R/R: {trade.risk_reward_ratio:.2f}")
        
        # C√°lculo manual para valida√ß√£o
        print(f"\nüîç VALIDA√á√ÉO DO C√ÅLCULO:")
        if result.recommended_trades:
            lucro_por_op = trade.expected_profit
            if lucro_por_op > 0:
                ops_necessarias = request.target_profit / lucro_por_op
                print(f"   ‚Ä¢ Lucro por opera√ß√£o: ${lucro_por_op:.2f}")
                print(f"   ‚Ä¢ Opera√ß√µes necess√°rias (c√°lculo manual): {ops_necessarias:.1f}")
                print(f"   ‚Ä¢ Opera√ß√µes estimadas (sistema): {result.estimated_operations}")
                
                # Verificar se est√° pr√≥ximo
                diferenca = abs(result.estimated_operations - ops_necessarias)
                if diferenca < 5:  # Margem de toler√¢ncia
                    print(f"\n   ‚úÖ C√ÅLCULO CORRETO! (diferen√ßa: {diferenca:.1f})")
                else:
                    print(f"\n   ‚ö†Ô∏è ATEN√á√ÉO: Grande diferen√ßa no c√°lculo ({diferenca:.1f} opera√ß√µes)")
            else:
                print(f"   ‚ö†Ô∏è Lucro esperado √© zero ou negativo")
        
        print(f"\nüí∞ ESTIMATIVA DE GANHO:")
        if result.recommended_trades:
            lucro_total = trade.expected_profit * result.estimated_operations
            print(f"   ‚Ä¢ {result.estimated_operations} opera√ß√µes √ó ${trade.expected_profit:.2f}")
            print(f"   ‚Ä¢ Lucro Total Estimado: ${lucro_total:.2f}")
            print(f"   ‚Ä¢ Objetivo: ${request.target_profit}")
            
            if abs(lucro_total - request.target_profit) < 5:
                print(f"   ‚úÖ OBJETIVO ATING√çVEL!")
            elif lucro_total < request.target_profit:
                print(f"   ‚ö†Ô∏è Pode precisar de mais opera√ß√µes")
            else:
                print(f"   ‚úÖ Margem de seguran√ßa positiva!")
        
        print("\n" + "=" * 70)
        
    except Exception as e:
        print(f"\n‚ùå ERRO: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    print("\nüîÆ TESTE DE CORRE√á√ÉO - MOTOR DE PREDI√á√ÉO")
    print(f"Executado em: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n")
    
    test_operations_calculation()
    
    print("\nüí° Se o c√°lculo estiver correto, o n√∫mero de opera√ß√µes deve fazer sentido")
    print("   matem√°tico com o lucro esperado por opera√ß√£o.\n")
